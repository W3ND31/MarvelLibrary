@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Common;
@model X.PagedList.IPagedList<MarvelLibrary.Models.Comic>
@{
    ViewData["Title"] = "Comics";
}


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewData["Title"]</title>
</head>
<body>

    <div class="mt-5">
        <h1 class="mt-5">Comics for @ViewBag.Name</h1>
        <p><a asp-action="Index">Back to List</a></p>
        <form asp-action="Details" method="get">
            <div class="form-actions no-color">
                <p>
                    Find by name: <input type="text" name="SearchString" asp-route-id=@ViewBag.id value="@ViewBag.filter" />
                    <input type="submit" value="Search" class="btn-dark" /> |
                    <a asp-action="Details">Back to Full List</a>
                </p>
            </div>
        </form>
        <div>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</div>
        <div class="pagination">
            @Html.PagedListPager(Model, pagina => Url.Action("Details", new { pagina, searchString = ViewBag.filter }), new PagedListRenderOptions
            {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            })
        </div>
        <hr>
        @foreach (var item in Model)
        {
            <div class="media">
                <img src="@Html.DisplayFor(modelItem=> item.Thumbnail)" class="align-self-center mr-3" height="400" width="250" />
                <div class="media-body">
                    <h5 class="mt-0"><strong>Title:</strong> @Html.DisplayFor(modelItem => item.Title)</h5>
                    <p class="mb-0">
                        <strong>Series Name:</strong> @Html.DisplayFor(modelItem => item.SeriesName)
                    </p>
                    <p class="mb-0">
                        <strong>Description:</strong> @Html.DisplayFor(modelItem => item.Description)
                    </p>
                </div>
            </div>
            <p></p>
            <hr />
        }

    </div>
        <div>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount </div>
        <div class="pagination">
            @Html.PagedListPager(Model, pagina => Url.Action("Details", new { pagina, searchString = ViewBag.filter }), new PagedListRenderOptions
            {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            })
        </div>
        <a asp-action="Index">Back to List</a>
</body>
</html>
